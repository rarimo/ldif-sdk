{
  "swagger": "2.0",
  "info": {
    "title": "query.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Query"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/rarimo/rarimo/ldif-sdk/cosmos/cscalist/params": {
      "get": {
        "operationId": "Query_Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cscalistQueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/rarimo/rarimo/ldif-sdk/cosmos/cscalist/proof": {
      "get": {
        "operationId": "Query_MerkleProof",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cscalistQueryGetMerkleProofResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "leaf",
            "description": "Leaf is a hash value of the leaf node in the tree",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/rarimo/rarimo/ldif-sdk/cosmos/cscalist/tree": {
      "get": {
        "operationId": "Query_Tree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cscalistQueryTreeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.countTotal",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "cscalistNode": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "Node self key"
        },
        "priority": {
          "type": "string",
          "format": "uint64",
          "title": "Node priority (should be random)"
        },
        "left": {
          "type": "string",
          "title": "Node left son key"
        },
        "right": {
          "type": "string",
          "title": "Node right son key"
        },
        "hash": {
          "type": "string",
          "title": "Merkle hash. H = Hash(Hash(left_key|right_key)|self_key)"
        },
        "childrenHash": {
          "type": "string",
          "title": "Hash(left_key|right_key)"
        }
      }
    },
    "cscalistQueryGetMerkleProofResponse": {
      "type": "object",
      "properties": {
        "proof": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "cscalistQueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/ldif_sdkcscalistParams"
        }
      }
    },
    "cscalistQueryTreeResponse": {
      "type": "object",
      "properties": {
        "tree": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cscalistNode"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1beta1PageResponse"
        }
      }
    },
    "ldif_sdkcscalistParams": {
      "type": "object",
      "properties": {
        "lcgA": {
          "type": "string",
          "format": "uint64",
          "title": "Linear congruential generator params\nhttps://en.wikipedia.org/wiki/Linear_congruential_generator"
        },
        "lcgB": {
          "type": "string",
          "format": "uint64"
        },
        "lcgMod": {
          "type": "string",
          "format": "uint64"
        },
        "lcgValue": {
          "type": "string",
          "format": "uint64"
        },
        "rootKey": {
          "type": "string",
          "title": "RootKey is the key of the current root node"
        },
        "rootUpdated": {
          "type": "boolean",
          "title": "RootUpdated is true when the root node was updated in Rarimo, but not in Chain"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1beta1PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "countTotal": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "v1beta1PageResponse": {
      "type": "object",
      "properties": {
        "nextKey": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    }
  }
}
